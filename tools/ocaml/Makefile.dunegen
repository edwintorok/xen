XEN_ROOT = $(CURDIR)/../..
OCAML_TOPLEVEL=$(CURDIR)
include $(OCAML_TOPLEVEL)/common.make

DUNE_SOURCES=$(wildcard libs/*/dune */dune) dune-project
INSTALL_FILES=$(addsuffix .install,xen xenstored)

DUNE_WORKSPACE=dune-workspace
DUNE_FLAGS=--workspace $(DUNE_WORKSPACE) --release
DUNERULES_FLAGS=-r @all --sandbox=none --cache=disabled --makefile

.PHONY: all
all: $(addprefix _build/default/,$(INSTALL_FILES)) install.sh uninstall.sh Makefile.dune.generated

install: install.sh
	./$<

uninstall: uninstall.sh
	./$<

Makefile.dune.generated.abspath: $(DUNE_SOURCES) ../$(DUNE_WORKSPACE) Makefile.dunegen
	cd ../ && dune rules $(DUNE_FLAGS) $(DUNERULES_FLAGS) >ocaml/$@

$(INSTALL_FILES) &: $(DUNE_SOURCES)
	cd ../ && dune build $(DUNE_FLAGS) $(addprefix ocaml/,$(INSTALL_FILES))

OCAML_LIBDIR=$(shell $(OCAMLFIND) printconf destdir)
OPAMINSTALLER_FLAGS+=--docdir $(docdir)
OPAMINSTALLER_FLAGS+=--libdir $(OCAML_LIBDIR)
OPAMINSTALLER_FLAGS+=--mandir $(mandir)
OPAMINSTALLER_FLAGS+=--prefix $(prefix)

%.install-sh: %.install Makefile.dunegen
	opam-installer $(OPAMINSTALLER_FLAGS) --name $* --script $(filter %.install,$^) >$@

%.uninstall-sh: %.install Makefile.dunegen
	opam-installer $(OPAMINSTALLER_FLAGS) -u --name $* --script $(filter %.install,$^) >$@ || true

INSTALL_DIRS=docdir OCAML_LIBDIR mandir sbindir prefix
INSTALLSH_SEDFLAGS=-e 's,$(prefix)/etc/xen,$(XEN_CONFIGDIR),g'
INSTALLSH_SEDFLAGS+=$(foreach DIR,$(INSTALL_DIRS),-e 's,$($(DIR)),$$($(DIR)),g')

install.sh: $(INSTALL_FILES:.install=.install-sh) Makefile.dunegen
	cat $(filter %.install-sh,$^) | sed $(INSTALLSH_SEDFLAGS) >$@

uninstall.sh: $(INSTALL_FILES:.install=.uninstall-sh) Makefile.dunegen
	cat $(filter %.uninstall-sh,$^) | sed $(INSTALLSH_SEDFLAGS) >$@

#TODO: use -L and -Wl,-rpath-link
LIB_DIRS=$(abspath $(wildcard ../libs/*/.))
LIBRARY_PATH=$(subst $(eval) ,:,$(LIB_DIRS))
dune-workspace: dune-workspace.in Makefile.dunegen
	@( sed -e "s|@LIBRARY_PATH@|$(LIBRARY_PATH)|" <dune-workspace.in \
	&& echo "; DO NOT EDIT: autogenerated from dune-workspace.in") >dune-workspace

TOOLS=OCAMLOPT OCAMLC OCAMLMKLIB CC

# OCAMLMKLIB doesn't look for the .opt version, so remove .opt to match
DUNESED_FLAGS+=-e 's/ocamlmklib.opt/ocamlmklib/g'

# replace absolute source tree paths with makefile variables
DUNESED_FLAGS+=-e 's,$(OCAML_TOPLEVEL),$$(OCAML_TOPLEVEL),g'

# replace references to tool absolute paths with unexpanded makefile variables
# $$ ensures that the output will contain a literal $
DUNESED_FLAGS+=$(foreach TOOL,$(TOOLS),\
					-e 's,$(shell which $($(TOOL))),$$($(TOOL)),g'\
				)

# Replace references to absolute OCaml header include dir with variable
DUNESED_FLAGS+=-e 's,-I $(OCAMLC_WHERE),-I $$(OCAMLC_WHERE),g'

# remove dependencies on absolute tool paths
# keep the \ because this might've been the first dependency after the :
DUNESED_FLAGS+=$(foreach TOOL,$(TOOLS),-e 's,$$($(TOOL)) \\,\\,')

# Dune will copy all dependencies to _build to ensure tools see only
# declared dependencies
# However in the generated makefile Dune will only use copy sandbox mode
# replace copies with symlinks
DUNESED_FLAGS+=-e 's,^\tcp ,\tcp -l ,'

# Delete dependencies on OCaml stdlib files,
# these may change with compiler versions
DUNESED_FLAGS+=-e '\,^ *$(OCAML_LIBDIR).*,d'

# Remove references to OCaml stdlib path, it is part of the default search
# Needs to come after the rule that deletes the dependencies
DUNESED_FLAGS+=-e 's,$(OCAML_LIBDIR)/ocaml/,,g'

# Dune's root is tools/ not tools/ocaml (because we depend on headers from there)
# Adjust paths by removing ocaml/ prefix
# This sed rule needs to come after other sed rules above that also contain /ocaml
DUNESED_FLAGS+=-e 's,ocaml/,,g'

# Adjust path to tool includes
DUNESED_FLAGS+=-e 's,../../../include,$(XEN_ROOT)/tools/include,g'

# Avoid copying includes
DUNESED_FLAGS+=-e '\, _build/default/include/,d'

# Remove dependencies on .so files to avoid accidentally rebuilding them
# These could be replaced with order-only dependencies
DUNESED_FLAGS+=-e '\,.so \\,d'

Makefile.dune.generated.verbose: Makefile.dune.generated.abspath
	sed $(DUNESED_FLAGS) <$< $o

# Dune rules copy a lot of files, silence these to show only actual build rules
Makefile.dune.generated: Makefile.dune.generated.verbose Makefile.dunegen
	sed -z -re 's/^([^\t][^\n]+\n\t)(cp|mkdir|rm|ln)/\1@\2/g' <$< $o
	#sed -z -re 's/\b([^\t].*\n\t)(cp|mkdir|rm|ln)/\1@\2/g' <$< $o

include Makefile.dune.generated
